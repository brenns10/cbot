image: alpine/3.14
packages:
  - meson
  - gcc
  - git
  - alpine-sdk
  - libc-dev
  - sqlite-dev
  - libconfig-dev
  - curl-dev
  - libmicrohttpd-dev
  - openssl-dev
  - libucontext-dev
  - sqlite
  - docker
sources:
  - https://github.com/brenns10/cbot
secrets:
- 7586b958-7ac1-4103-9ec9-ff10a6007bfe # github token
- 7b922363-3ca0-4080-863f-5404a4e6796f # package key
- 29e80069-2df8-4bd1-9801-313f2ac4a82b # docker hub
tasks:
  - ghsetup: |
      mkdir ghsetup && cd ghsetup
      ghver=2.0.0
      wget https://github.com/cli/cli/releases/download/v$ghver/gh_${ghver}_linux_amd64.tar.gz
      tar xf gh_${ghver}_linux_amd64.tar.gz
      sudo mv gh_${ghver}_linux_amd64/bin/gh /usr/bin/gh
      cd .. && rm -r ghsetup
  - setup: |
      cd cbot
      meson build
  - build: |
      cd cbot
      ninja -C build
  - source_release: |
      cd cbot
      TAG=$(git tag --points-at HEAD)
      [ -z "$TAG" ] && exit 0
      VER=$(echo $TAG | sed s/v//)
      ./make-release.sh
      mkdir -p ~/artifacts
      mv cbot-$VER.tar.gz ~/artifacts/
  - alpine_package: |
      cd cbot
      TAG=$(git tag --points-at HEAD)
      [ -z "$TAG" ] && exit 0
      VER=$(echo $TAG | sed s/v//)
      export PACKAGER_PRIVKEY=~/packager.key
      cd deploy/alpine
      cp ~/artifacts/cbot-$VER.tar.gz .
      sed -i 's?source=.*$?source="'cbot-$VER.tar.gz'"?' APKBUILD
      abuild checksum
      abuild
      mv ~/packages/deploy/x86_64/cbot-$VER-r0.apk ~/artifacts/
  - github_release: |
      cd cbot
      set +x; source ~/.github_token; set -x
      TAG=$(git tag --points-at HEAD)
      [ -z "$TAG" ] && exit 0
      VER=$(echo $TAG | sed s/v//)
      # Get the blurb for the current release from CHANGELOG
      sed <CHANGELOG \
          -e '1,/^[[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+ ([[:digit:]]\{4\}/d' \
          -e '/^[[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+ ([[:digit:]]\{4\}/,$d' \
          -e '/^-\+$/d' \
          -e '/./,$!d' | tac | sed '/./,$!d' | tac > /tmp/changelog
      gh release create $TAG ~/artifacts/* -t $TAG -F /tmp/changelog
  - docker_build: |
      cd cbot
      set +x; source ~/.github_token; set -x
      TAG=$(git tag --points-at HEAD)
      [ -z "$TAG" ] && exit 0
      VER=$(echo $TAG | sed s/v//)
      cd deploy
      cp ~/artifacts/cbot-$VER-r0.apk cbot.apk
      sudo service docker start
      sudo docker login docker.io -u brenns10 --password-stdin < ~/.dockerpw
      sudo docker build -t brenns10/cbot:$TAG .
      sudo docker tag brenns10/cbot:$TAG brenns10/cbot:latest
      sudo docker push -a docker.io/brenns10/cbot
